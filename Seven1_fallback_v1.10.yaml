# 名称： Seven1_fallback
# 版本： V1.10
# 日期： 2025年10月30日
# 地址： https://github.com/Seven1echo/Yaml
# 说明： ①本文件适用于 Clash/Nikki 插件； ②使用前需补充完整 “订阅链接” 与 “机场名”，并将 “nameserver” 修改为运营商提供的 DNS 地址。



# ※※※※※※※※※※※※※ 锚点区域 ※※※※※※※※※※※※※
# ① 订阅锚点
PProviders: &PProviders {type: http, interval: 86400, proxy: DIRECT, health-check: {enable: true, url: 'https://www.gstatic.com/generate_204', interval: 300}}

# ② 出站锚点
pr: &pr {type: select, proxies: [🚀 默认代理, 🔯 香港故转, 🔯 台湾故转, 🔯 日本故转, 🔯 新加坡故转, 🔯 美国故转, 🔯 欧洲故转, ♻️ 香港自动, ♻️ 台湾自动, ♻️ 日本自动, ♻️ 新加坡自动, ♻️ 美国自动, ♻️ 欧洲自动, 🇭🇰 香港手动, 🇹🇼 台湾手动, 🇯🇵 日本手动, 🇸🇬 新加坡手动, 🇺🇸 美国手动, 🇪🇺 欧洲手动, 🌐 其他手动, DIRECT, REJECT]}

# ③ 策略锚点
BaseHS: &BaseHS {type: select, interval: 300, include-all: true, url: 'https://www.gstatic.com/generate_204'}
BaseFB: &BaseFB {type: fallback, interval: 300, lazy: true, url: 'https://www.gstatic.com/generate_204', hidden: true}
BaseUT: &BaseUT {type: url-test, include-all: true, tolerance: 50, interval: 300, timeout: 5000, url: 'https://www.gstatic.com/generate_204', hidden: true}

# ④ 节点锚点
x-filters:
  hk: &hk-filter "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong)).*$"
  tw: &tw-filter "(?=.*(广台|台湾|🇹🇼|TW|tai|TPE|TSA|KHH)).*$"
  jp: &jp-filter "(?=.*(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)).*$"
  sg: &sg-filter "(?=.*(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore)).*$"
  us: &us-filter "(?=.*(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States)).*$"
  eu: &eu-filter "(?=.*(奥|比|保|克罗地亚|塞|捷|丹|爱沙|芬|法|德|希|匈|爱尔|意|拉|立|卢|马|荷|波|葡|罗|斯洛伐|斯洛文|西|瑞|英|🇧🇪|🇨🇿|🇩🇰|🇫🇮|🇫🇷|🇩🇪|🇮🇪|🇮🇹|🇱🇹|🇱🇺|🇳🇱|🇵🇱|🇸🇪|🇬🇧|CDG|FRA|AMS|MAD|BCN|FCO|MUC|BRU)).*$"
  other: &other-filter "^((?!(直连|拒绝|广港|香港|HK|Hong Kong|🇭🇰|HongKong|广台|台湾|🇹🇼|TW|tai|TPE|TSA|KHH|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States|奥|比|保|克罗地亚|塞|捷|丹|爱沙|芬|法|德|希|匈|爱尔|意|拉|立|卢|马|荷|波|葡|罗|斯洛伐|斯洛文|西|瑞|英|🇧🇪|🇨🇿|🇩🇰|🇫🇮|🇫🇷|🇩🇪|🇮🇪|🇮🇹|🇱🇹|🇱🇺|🇳🇱|🇵🇱|🇸🇪|🇬🇧|CDG|FRA|AMS|MAD|BCN|FCO|MUC|BRU)).)*$"

# ⑤ 规则锚点
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}            # 规则模板  IP
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}    # 规则模板  域名
  class: &class {type: http, interval: 86400, behavior: classical, format: text}  # 规则模板  文本



# ※※※※※※※※※※※※※ 节点订阅 ※※※※※※※※※※※※※
# 将 “订阅链接” 与 “机场名” 替换为所用机场信息； 订阅条数过多可删除，不够可新增，注意开头缩进、不同条数前方 “机场名” 不能重复，避免配置报错； 后方 “机场名” 作用为每个节点添加固定前缀，用于区分不同机场。
proxy-providers:
  机场名: {<<: *PProviders, url: '订阅链接', override: {additional-prefix: '[机场名] '}}
  机场名: {<<: *PProviders, url: '订阅链接', override: {additional-prefix: '[机场名] '}}

# 自建节点信息
proxies:
#  - name: Home
#    type: ss
#    server: ****.top                                                             # 域名/IP
#    port: ****                                                                   # 开放端口
#    cipher: aes-256-gcm                                                          # 加密方式
#    password: "****"                                                             # 链接密码
#    udp: true                                                                    # UDP支持



# ※※※※※※※※※※※※※ 核心配置 ※※※※※※※※※※※※※
# 基础配置
port: 7890                                                                        # 代理端口  HTTP 
socks-port: 7891                                                                  # 代理端口  SOCKS5
redir-port: 7892                                                                  # 代理端口  透明代理
mixed-port: 7893                                                                  # 代理端口  混合端口
tproxy-port: 7895                                                                 # 代理端口  TPROXY
mode: rule                                                                        # 规则模式  规则分流
ipv6: true                                                                        # 网络协议  IPV6协议
allow-lan: true                                                                   # 设备连接  允许局域网
log-level: warning                                                                # 日志级别  debug=调试, info=普通信息, warning=仅警告, error=仅错误
bind-address: '*'                                                                 # 网络接口  局域网设所有备
unified-delay: true                                                               # 统一延迟  减少波动
tcp-concurrent: true                                                              # 并发连接  提升多任务性能
find-process-mode: 'off'                                                          # 查找进程  always=始终 off=关闭
global-client-fingerprint: chrome                                                 # 指纹识别  客户端伪装浏览器的特征
keep-alive-interval: 30                                                           # 保活间隔  防止连接断开
keep-alive-idle: 600                                                              # 空闲超时  释放闲置连接）

# 认证配置
authentication:
  - ""                                                                            # 认证密码  启用时填写，格式：“用户名:密码”）
skip-auth-prefixes:                                                               # 免认网段  家庭局域网
  - 127.0.0.1/8                                                                   # 本地回环
  - 10.0.0.0/8                                                                    # A类内网
  - 172.16.0.0/12                                                                 # B类内网
  - 192.168.0.0/16                                                                # C类内网  覆盖所有192.168.x.0网段

# 地理数据配置
geodata-mode: false                                                               # 加载模式  true=使用DAT格式，false=使用MMDB格式
geodata-loader: standard                                                          # 标准加载  兼容大多数环境）
geo-auto-update: true                                                             # 自动更新  启用
geo-update-interval: 48                                                           # 更新间隔  48小时
geox-url:                                                                         # 地理数据  下载链接
#  geosite: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
#  geoip:   "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  mmdb:    "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb"
  asn:     "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb"

# 管理面板
external-ui-url: https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip
external-ui-name: zashboard                                                       # 面板名称
external-ui: ui                                                                   # 面板目录
external-controller: 0.0.0.0:9090                                                 # 控制地址  局域网可访
secret: ""                                                                        # 面板密码  启用时填写，格式："密码"

# 配置存储
profile:
  store-selected: true                                                            # 保存选择  选择的节点/策略组
  store-fake-ip: true                                                             # 保存映射  提升DNS解析速度

# 流量嗅探
sniffer:
  enable: true                                                                    # 启用嗅探  提升分流准确性
  override-destination: false                                                     # 保留地址  不覆盖目标地址，避免流量异常
  force-dns-mapping: true                                                         # 强制映射  Fake-IP模式必备
  parse-pure-ip: true                                                             # 解析流量  识别纯IP直连的服务

# TUN配置
tun:
  enable: true                                                                    # 启用TUN  
  stack: mixed                                                                    # 协议堆栈  混合协议（gVisor+内核，兼容更多场景）
  dns-hijack:                                                                     # 劫持流量  避免DNS泄漏
    - "any:53"                                                                    # 劫持流量  劫持UDP 53端口
    - "tcp://any:53"                                                              # 劫持流量  劫持TCP 53端口
  auto-route: true                                                                # 添加路由  自动添加，无需手动配置路由表
  auto-redirect: true                                                             # 重定流量  自动重定向流量到TUN
  auto-detect-interface: true                                                     # 检测出口  自动检测网卡（适配多网卡环境）

# DNS设置
dns:
  enable: true                                                                    # 内置DNS
  listen: 0.0.0.0:7874                                                            # 监听端口
  cache: true                                                                     # DNS缓存
  cache-max-ttl: 3600                                                             # 缓存期限
  cache-min-ttl: 60                                                               # 最短缓存
  ipv6: true                                                                      # IPv6解析
  enhanced-mode: fake-ip                                                          # 增强模式  Fake-IP模式（核心：本地解析+无泄漏）
  fake-ip-range: 198.18.0.1/16                                                    # 虚拟地址  Fake-IP地址池（默认范围）
  fake-ip-filter-mode: blacklist                                                  # 过滤模式  黑名列表
  fake-ip-filter:                                                                 # 排除解析  Fake-IP的域名（直连解析，如本地服务）
    - "rule-set:private_domain,cn_domain"                                         # 国内域名  引用私有域名和国内域名规则集，这些域名走真实IP解析
    - "+.msftconnecttest.com"                                                     # 连接检测  Windows网络连接检测域名，避免系统误判网络状态
    - "+.msftncsi.com"                                                            # 状态检测  Windows网络状态指示器域名，确保NCSI检测正常
    - "time.*.com"                                                                # 时间同步  常见的网络时间同步(NTP)服务器域名，保证时间校准准确
  nameserver:                                                                     # 解析服务  使用用运营商提供的DNS
    - 116.116.116.116
    - 221.5.88.88



# ※※※※※※※※※※※※※ 代理策略组 ※※※※※※※※※※※※※
# 策略组（按服务分组）
proxy-groups:
  - {name: 🚀 默认代理, type: select, proxies: [🔯 香港故转, 🔯 台湾故转, 🔯 日本故转, 🔯 新加坡故转, 🔯 美国故转, 🔯 欧洲故转, ♻️ 香港自动, ♻️ 台湾自动, ♻️ 日本自动, ♻️ 新加坡自动, ♻️ 美国自动, ♻️ 欧洲自动, 🇭🇰 香港手动, 🇹🇼 台湾手动, 🇯🇵 日本手动, 🇸🇬 新加坡手动, 🇺🇸 美国手动, 🇪🇺 欧洲手动, 🌐 其他手动, DIRECT, REJECT]}
  - {name: 📹 YouTube, <<: *pr}
  - {name: 🍀 Google, <<: *pr}
  - {name: 🤖 ChatGPT, <<: *pr}
  - {name: 👨🏿‍💻 GitHub, <<: *pr}
  - {name: 🐬 OneDrive, <<: *pr}
  - {name: 🪟 Microsoft, <<: *pr}
  - {name: 🎵 TikTok, <<: *pr}
  - {name: 📲 Telegram, <<: *pr}
  - {name: 🎥 NETFLIX, <<: *pr}
  - {name: 💶 PayPal, <<: *pr}
  - {name: ✈️ Speedtest, <<: *pr}
  - {name: 🐟 漏网之鱼, <<: *pr}

# 策略组（按区域分组）
  # 香港组
  - {name: 🔯 香港故转, <<: *BaseFB, proxies: [🇭🇰 香港手动, ♻️ 香港自动]}
  - {name: 🇭🇰 香港手动, <<: *BaseHS, filter: *hk-filter}
  - {name: ♻️ 香港自动, <<: *BaseUT, filter: *hk-filter}

  # 台湾组
  - {name: 🔯 台湾故转, <<: *BaseFB, proxies: [🇹🇼 台湾手动, ♻️ 台湾自动]}
  - {name: 🇹🇼 台湾手动, <<: *BaseHS, filter: *tw-filter}
  - {name: ♻️ 台湾自动, <<: *BaseUT, filter: *tw-filter}

  # 日本组
  - {name: 🔯 日本故转, <<: *BaseFB, proxies: [🇯🇵 日本手动, ♻️ 日本自动]}
  - {name: 🇯🇵 日本手动, <<: *BaseHS, filter: *jp-filter}
  - {name: ♻️ 日本自动, <<: *BaseUT, filter: *jp-filter}

  # 新加坡组
  - {name: 🔯 新加坡故转, <<: *BaseFB, proxies: [🇸🇬 新加坡手动, ♻️ 新加坡自动]}
  - {name: 🇸🇬 新加坡手动, <<: *BaseHS, filter: *sg-filter}
  - {name: ♻️ 新加坡自动, <<: *BaseUT, filter: *sg-filter}

  # 美国组
  - {name: 🔯 美国故转, <<: *BaseFB, proxies: [🇺🇸 美国手动, ♻️ 美国自动]}
  - {name: 🇺🇸 美国手动, <<: *BaseHS, filter: *us-filter}
  - {name: ♻️ 美国自动, <<: *BaseUT, filter: *us-filter}

  # 欧洲组
  - {name: 🔯 欧洲故转, <<: *BaseFB, proxies: [🇪🇺 欧洲手动, ♻️ 欧洲自动]}
  - {name: 🇪🇺 欧洲手动, <<: *BaseHS, filter: *eu-filter}
  - {name: ♻️ 欧洲自动, <<: *BaseUT, filter: *eu-filter}

  # 其他组
  - {name: 🌐 其他手动, <<: *BaseHS, filter: *other-filter}



# ※※※※※※※※※※※※※ 规则匹配 ※※※※※※※※※※※※※
rules:
  # 个人补充
  - RULE-SET,Seven1_DIRECT,DIRECT
  - RULE-SET,Seven1_REJECT,REJECT
  
  # 场景分流
  - RULE-SET,private_ip,DIRECT,no-resolve
  - RULE-SET,private_domain,DIRECT
  - RULE-SET,speedtest_domain,✈️ Speedtest
  - RULE-SET,ai,🤖 ChatGPT
  - RULE-SET,github_domain,👨🏿‍💻 GitHub
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,google_domain,🍀 Google
  - RULE-SET,onedrive_domain,🐬 OneDrive
  - RULE-SET,microsoft_domain,🪟 Microsoft
  - RULE-SET,tiktok_domain,🎵 TikTok
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,netflix_domain,🎥 NETFLIX
  - RULE-SET,paypal_domain,💶 PayPal
  - RULE-SET,google_ip,🍀 Google,no-resolve
  - RULE-SET,netflix_ip,🎥 NETFLIX,no-resolve
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,geolocation-!cn,🚀 默认代理
  - RULE-SET,cn_domain,DIRECT
  - RULE-SET,cn_ip,DIRECT
  - MATCH,🐟 漏网之鱼


# 规则来源
rule-providers: 
  # 文本规则
  Seven1_DIRECT:     { <<: *class, url: "https://raw.githubusercontent.com/Seven1echo/Yaml/refs/heads/main/list/DIRECT.list"}
  Seven1_REJECT:     { <<: *class, url: "https://raw.githubusercontent.com/Seven1echo/Yaml/refs/heads/main/list/REJECT.list"}

  # 域名规则
  private_domain:    { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  speedtest_domain:  { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  ai:                { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs" }
  github_domain:     { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  youtube_domain:    { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain:     { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  onedrive_domain:   { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain:  { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  tiktok_domain:     { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  telegram_domain:   { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain:    { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal_domain:     { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  geolocation-!cn:   { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain:         { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}

  # IP规则
  private_ip:        { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs"}
  google_ip:         { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip:       { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip:        { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
  cn_ip:             { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  